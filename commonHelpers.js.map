{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// const startButton = document.querySelector('[data-start]');\n// const dateTimePicker = document.getElementById('datetime-picker');\n// const dayOutput = document.querySelector('[data-days]');\n// const hoursOutput = document.querySelector('[data-hours]');\n// const minutesOutput = document.querySelector('[data-minutes]');\n// const secondsOutput = document.querySelector('[data-seconds]');\n\n// let currentSelectedDate = null;\n// const options = {\n//   enableTime: true,\n//   time_24hr: true,\n//   defaultDate: new Date(),\n//   minuteIncrement: 1,\n//   onClose(selectedDates) {\n//     if (selectedDates[0] <= new Date()) {\n//       return iziToast.error({\n//         position: 'topRight',\n//         message: 'Please choose a date in the future',\n//       });\n//     }\n//     currentSelectedDate = selectedDates[0];\n//     startButton.disabled = false;\n//   },\n// };\n\n// flatpickr(dateTimePicker, options);\n\n// startButton.addEventListener('click', startTimer);\n\n// let intervalId = null;\n\n// function startTimer() {\n//   intervalId = setInterval(() => updateTimer, 1000);\n// }\n\n// function updateTimer() {\n//   dateTimePicker.disabled = true;\n//   startButton.disabled = true;\n//   const currentTime = currentSelectedDate - new Date();\n\n//   if (currentTime <= 0) {\n//     dateTimePicker.disabled = false;\n//     return;\n//   }\n// }\n// const { days, hours, minutes, seconds } = convertMs(currentTime);\n// dayOutput.textContent = String(days).padStart(2, 0);\n// hoursOutput.textContent = String(hours).padStart(2, 0);\n// minutesOutput.textContent = String(minutes).padStart(2, 0);\n// secondsOutput.textContent = String(seconds).padStart(2, 0);\n// function convertMs(ms) {\n//   const second = 1000;\n//   const minute = second * 60;\n//   const hour = minute * 60;\n//   const day = hour * 24;\n\n//   const days = Math.floor(ms / day);\n//   const hours = Math.floor((ms % day) / hour);\n//   const minutes = Math.floor(((ms % day) % hour) / minute);\n\n//   const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n//   return { days, hours, minutes, seconds };\n// }\n//nhwvgieahvbeipbneob;neobnoebnebe'bepbeipb\n\n// let userSelectedDate = null;\n\n// const options = {\n//   enableTime: true,\n//   time_24hr: true,\n//   defaultDate: new Date(),\n//   minuteIncrement: 1,\n//   onClose(selectedDates) {\n//     userSelectedDate = selectedDates[0];\n//     if (userSelectedDate <= new Date()) {\n//       iziToast.error({\n//         title: 'Error',\n//         message: 'Please choose a date in the future',\n//       });\n//       startButton.disabled = true;\n//     } else {\n//       startButton.disabled = false;\n//     }\n//   },\n// };\n\n// flatpickr(dateTimePicker, options);\n\n// startButton.addEventListener('click', () => {\n//   startButton.disabled = true;\n//   dateTimePicker.disabled = true;\n\n//   const timerInterval = setInterval(() => {\n//     const currentTime = new Date();\n//     const timeRemaining = userSelectedDate - currentTime;\n\n//     if (timeRemaining <= 0) {\n//       clearInterval(timerInterval);\n//       updateTimer(0, 0, 0, 0);\n//       dateTimePicker.disabled = false;\n//     } else {\n//       const { days, hours, minutes, seconds } = convertMs(timeRemaining);\n//       updateTimer(days, hours, minutes, seconds);\n//     }\n//   }, 1000);\n// });\n\n// function updateTimer(days, hours, minutes, seconds) {\n//   document.querySelector('[data-days]').textContent = addLeadingZero(days);\n//   document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n//   document.querySelector('[data-minutes]').textContent =\n//     addLeadingZero(minutes);\n//   document.querySelector('[data-seconds]').textContent =\n//     addLeadingZero(seconds);\n// }\n\n// function convertMs(ms) {\n//   const second = 1000;\n//   const minute = second * 60;\n//   const hour = minute * 60;\n//   const day = hour * 24;\n\n//   const days = Math.floor(ms / day);\n//   const hours = Math.floor((ms % day) / hour);\n//   const minutes = Math.floor(((ms % day) % hour) / minute);\n//   const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n//   return { days, hours, minutes, seconds };\n// }\n\n// function addLeadingZero(value) {\n//   return String(value).padStart(2, '0');\n// }\nconst startButton = document.querySelector('[data-start]');\nconst daysSpan = document.querySelector('[data-days]');\nconst hoursSpan = document.querySelector('[data-hours]');\nconst minutesSpan = document.querySelector('[data-minutes]');\nconst secondsSpan = document.querySelector('[data-seconds]');\nconst datetimePicker = document.querySelector('#datetime-picker');\n\nlet userSelectedDate = null;\nlet intervalId = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    if (selectedDate <= new Date()) {\n      iziToast.error({\n        position: 'topRight',\n\n        message: 'Please choose a date in the future',\n      });\n      startButton.disabled = true;\n    } else {\n      userSelectedDate = selectedDate;\n      startButton.disabled = false;\n    }\n  },\n};\n\nflatpickr(datetimePicker, options);\n\nstartButton.addEventListener('click', () => {\n  startButton.disabled = true;\n  datetimePicker.disabled = true;\n\n  intervalId = setInterval(() => {\n    const currentTime = new Date();\n    const timeDifference = userSelectedDate - currentTime;\n\n    if (timeDifference <= 0) {\n      clearInterval(intervalId);\n      datetimePicker.disabled = false;\n      startButton.disabled = true;\n      iziToast.success({\n        title: 'Success',\n        message: 'Time is up!',\n      });\n      updateTimerDisplay(0, 0, 0, 0);\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(timeDifference);\n    updateTimerDisplay(days, hours, minutes, seconds);\n  }, 1000);\n});\n\nfunction updateTimerDisplay(days, hours, minutes, seconds) {\n  daysSpan.textContent = String(days).padStart(2, '0');\n  hoursSpan.textContent = String(hours).padStart(2, '0');\n  minutesSpan.textContent = String(minutes).padStart(2, '0');\n  secondsSpan.textContent = String(seconds).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["startButton","daysSpan","hoursSpan","minutesSpan","secondsSpan","datetimePicker","userSelectedDate","intervalId","options","selectedDates","selectedDate","iziToast","flatpickr","timeDifference","updateTimerDisplay","days","hours","minutes","seconds","convertMs","ms"],"mappings":"sGA2IA,MAAMA,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAiB,SAAS,cAAc,kBAAkB,EAEhE,IAAIC,EAAmB,KACnBC,EAAa,KAEjB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,MACtBC,EAAS,MAAM,CACb,SAAU,WAEV,QAAS,oCACjB,CAAO,EACDX,EAAY,SAAW,KAEvBM,EAAmBI,EACnBV,EAAY,SAAW,GAE1B,CACH,EAEAY,EAAUP,EAAgBG,CAAO,EAEjCR,EAAY,iBAAiB,QAAS,IAAM,CAC1CA,EAAY,SAAW,GACvBK,EAAe,SAAW,GAE1BE,EAAa,YAAY,IAAM,CAE7B,MAAMM,EAAiBP,EADH,IAAI,KAGxB,GAAIO,GAAkB,EAAG,CACvB,cAAcN,CAAU,EACxBF,EAAe,SAAW,GAC1BL,EAAY,SAAW,GACvBW,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,aACjB,CAAO,EACDG,EAAmB,EAAG,EAAG,EAAG,CAAC,EAC7B,MACD,CAED,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAc,EAClEC,EAAmBC,EAAMC,EAAOC,EAASC,CAAO,CACjD,EAAE,GAAI,CACT,CAAC,EAED,SAASJ,EAAmBC,EAAMC,EAAOC,EAASC,EAAS,CACzDjB,EAAS,YAAc,OAAOc,CAAI,EAAE,SAAS,EAAG,GAAG,EACnDb,EAAU,YAAc,OAAOc,CAAK,EAAE,SAAS,EAAG,GAAG,EACrDb,EAAY,YAAc,OAAOc,CAAO,EAAE,SAAS,EAAG,GAAG,EACzDb,EAAY,YAAc,OAAOc,CAAO,EAAE,SAAS,EAAG,GAAG,CAC3D,CAEA,SAASC,EAAUC,EAAI,CAMrB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAC1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EACpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EACjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}